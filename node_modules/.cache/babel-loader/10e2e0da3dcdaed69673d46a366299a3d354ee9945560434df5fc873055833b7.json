{"ast":null,"code":"var _jsxFileName = \"/Users/cassandraheil/Desktop/practice_files/recoloring_poc/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [svgContent, setSvgContent] = useState('');\n  const [selectedElement, setSelectedElement] = useState(null);\n  const svgContainerRef = useRef(null);\n\n  // Handle SVG file upload\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file && file.type.includes('svg')) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setSvgContent(e.target.result); // Set raw SVG string\n        setSelectedElement(null); // Reset selection when uploading a new SVG\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please upload a valid SVG file');\n    }\n  };\n\n  // Attach click listeners to all SVG paths/regions after it loads\n  useEffect(() => {\n    if (!svgContent || !svgContainerRef.current) return;\n    const svgEl = svgContainerRef.current.querySelector('svg');\n    if (!svgEl) return;\n    const elements = svgEl.querySelectorAll('path, rect, circle, polygon');\n    const clickHandler = e => {\n      setSelectedElement(e.target); // Store the clicked element\n    };\n    elements.forEach(el => {\n      el.style.cursor = 'pointer';\n      el.addEventListener('click', clickHandler);\n    });\n    return () => {\n      elements.forEach(el => {\n        el.removeEventListener('click', clickHandler);\n      });\n    };\n  }, [svgContent]);\n\n  // Change color of selected element\n  const changeColor = color => {\n    if (selectedElement) {\n      selectedElement.setAttribute('fill', color);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      textAlign: 'center',\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SVG Recoloring Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".svg\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: svgContainerRef,\n      dangerouslySetInnerHTML: {\n        __html: svgContent\n      },\n      style: {\n        marginTop: '1rem',\n        border: svgContent ? '1px solid #ccc' : 'none',\n        display: 'inline-block',\n        maxWidth: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), selectedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected: \", selectedElement.tagName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '0.5rem'\n        },\n        children: ['#f87171', '#60a5fa', '#34d399', '#fbbf24', '#a78bfa'].map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeColor(color),\n          style: {\n            width: 40,\n            height: 40,\n            backgroundColor: color,\n            border: '1px solid #333',\n            cursor: 'pointer'\n          }\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fbxxbzi0bgKoMfPD9Bt3m2UZ2gE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","svgContent","setSvgContent","selectedElement","setSelectedElement","svgContainerRef","handleFileUpload","event","_event$target$files","file","target","files","type","includes","reader","FileReader","onload","e","result","readAsText","alert","current","svgEl","querySelector","elements","querySelectorAll","clickHandler","forEach","el","style","cursor","addEventListener","removeEventListener","changeColor","color","setAttribute","className","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","ref","dangerouslySetInnerHTML","__html","marginTop","border","display","maxWidth","tagName","justifyContent","gap","map","onClick","width","height","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/cassandraheil/Desktop/practice_files/recoloring_poc/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [svgContent, setSvgContent] = useState('');\n  const [selectedElement, setSelectedElement] = useState(null);\n  const svgContainerRef = useRef(null);\n\n  // Handle SVG file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files?.[0];\n    if (file && file.type.includes('svg')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setSvgContent(e.target.result); // Set raw SVG string\n        setSelectedElement(null); // Reset selection when uploading a new SVG\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Please upload a valid SVG file');\n    }\n  };\n\n  // Attach click listeners to all SVG paths/regions after it loads\n  useEffect(() => {\n    if (!svgContent || !svgContainerRef.current) return;\n\n    const svgEl = svgContainerRef.current.querySelector('svg');\n    if (!svgEl) return;\n\n    const elements = svgEl.querySelectorAll('path, rect, circle, polygon');\n    const clickHandler = (e) => {\n      setSelectedElement(e.target); // Store the clicked element\n    };\n\n    elements.forEach((el) => {\n      el.style.cursor = 'pointer';\n      el.addEventListener('click', clickHandler);\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('click', clickHandler);\n      });\n    };\n  }, [svgContent]);\n\n  // Change color of selected element\n  const changeColor = (color) => {\n    if (selectedElement) {\n      selectedElement.setAttribute('fill', color);\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ textAlign: 'center', padding: '1rem' }}>\n      <h2>SVG Recoloring Demo</h2>\n\n      <input type=\"file\" accept=\".svg\" onChange={handleFileUpload} />\n\n      {/* Render the SVG */}\n      <div\n        ref={svgContainerRef}\n        dangerouslySetInnerHTML={{ __html: svgContent }}\n        style={{\n          marginTop: '1rem',\n          border: svgContent ? '1px solid #ccc' : 'none',\n          display: 'inline-block',\n          maxWidth: '100%',\n        }}\n      />\n\n      {/* Color picker buttons */}\n      {selectedElement && (\n        <div style={{ marginTop: '1rem' }}>\n          <p>Selected: {selectedElement.tagName}</p>\n          <div style={{ display: 'flex', justifyContent: 'center', gap: '0.5rem' }}>\n            {['#f87171', '#60a5fa', '#34d399', '#fbbf24', '#a78bfa'].map((color) => (\n              <button\n                key={color}\n                onClick={() => changeColor(color)}\n                style={{\n                  width: 40,\n                  height: 40,\n                  backgroundColor: color,\n                  border: '1px solid #333',\n                  cursor: 'pointer',\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}